startup_data = csvread('50_Startups.csv');startup_data = startup_data(2:end,:);x0 = 1;x1 = startup_data(:,1); #R&D Spendx2 = startup_data(:,2); #Administration Spendx3 = startup_data(:,3); #Marketing Spendy = startup_data(:,4); #Total profit# Replacing null feature values with column-wise meanx1 = handle_null(x1);x2 = handle_null(x2);x3 = handle_null(x3);#Feature scaling to allow for easier convergencex1 = mean_normalization(x1);x2 = mean_normalization(x2);x3 = mean_normalization(x3);features = [x1,x2,x3];#Calculating initial mean squared error value and setting initial parameter valuestheta0 = 0;theta1 = 0;theta2 = 0;theta3 = 0;j = mean_square_error(features,y,theta0,theta1,theta2,theta3)#Initliasing factors needed for gradient descentiterations = 1000;alpha = 0.01;tolerance = 0.1;i = 1;while i <= 1000,  [the0,the1,the2,the3] = gradient_descent(features,y,theta0,theta1,theta2,theta3,alpha);  theta0 = the0;  theta1 = the1;  theta2 = the2;  theta3 = the3;  new_J = mean_square_error(features,y,theta0,theta1,theta2,theta3);  if abs(new_J - j) <= tolerance,    break;  end;  figure(1);  xlabel('Number of iterations');  ylabel('J(theta)');  plot(i,new_J);  hold on;  j = new_J;  i = i+1;end;disp(theta0);disp(theta1);disp(theta2);disp(theta3);disp(j);